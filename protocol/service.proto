syntax = "proto3";

package threedouble.proto;

message Point {
    uint32 x = 1;
    uint32 y = 2;
}

enum ItemType {
    COIN = 0;
}

message Item {
    ItemType type = 1;
    Point pos = 2;
	// ItemStatus action = 3;
}

enum Direction{
    RIGHT = 0;
    DOWN = 1;
    LEFT = 2;
    UP = 3;
}

enum UnitType {
    PACMAN = 0;
    GHOST = 1;
    //BOSS = 2; ?)
}

enum BeingStatus {
    KILLED = 0;
    ALIVE = 1;
    DYING = 2;
}

enum GameStatus {
    WIN = 0;
    LOSE = 1;
}

message UnitInit {
    UnitType type = 1;
    string name = 2;
    Unit data = 3;
}

message Unit {
    Point pos = 1;
    Direction direction = 2;
    float entryPercent = 3;
    BeingStatus status = 4;
    uint32 health = 5;
}

message ConnectMessage {
// Client to server request message
// TODO: Set client name, add client to clients queue

    string name = 1;
}

message QueueMessage {
// Server to client request message
// TODO: Show client position in queue

	uint32 position = 1;
}

message StartMessage {
// Server to client request message
// TODO: Init game data. Start game on client.

    uint32 id = 1; // index in room
    repeated UnitInit unit = 2; // unit init data
    repeated string map = 3; // game map. Not string, bytes array
    repeated Item item = 4; // game item init data
}

message EventMessage {
// Client to server request message
// TODO: Handle player event. Send handled game data as IterationMessage

    Direction direction = 1;
}

message IterationMessage {
// Server to client request message
// TODO: Save and draw new units positions and derecations. Remove some items?

    repeated Unit unit = 1;
    repeated Item item = 2;
}

message EndMessage {
// Server to client request message
// TODO: End game on client. Show end game gata

    GameStatus status = 1;
    uint32 points = 2;
}
